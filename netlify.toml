[build]
  publish = "web-build"
  command = "npm run build:web"

[build.environment]
  NODE_VERSION = "22"
  NPM_VERSION = "10"

# Production context: Deploys from the main branch
[context.production]
  command = "npm run build:web"
  publish = "web-build"

# Deploy Preview context: All deploys from pull requests
[context.deploy-preview]
  command = "npm run build:web"
  publish = "web-build"

# Branch-deploy context for all non-production branches
[context.branch-deploy]
  command = "npm run build:web"
  publish = "web-build"

# Allow edge function to handle challenge URLs
[[redirects]]
  from = "/challenge*"
  to = "/challenge*"
  status = 200
  force = false

# SPA redirect - handle client-side routing (after edge function)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Preview API endpoint for challenge images  
[[redirects]]
  from = "/api/preview"
  to = "/.netlify/functions/preview"
  status = 200

# Specific routes that should serve index.html
[[redirects]]
  from = "/challenge"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/privacy"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/terms"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/dmca"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/about"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/contact"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/preview-image"
  to = "/index.html"
  status = 200

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"

# Cache static assets
[[headers]]
  for = "/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Cache other assets with shorter duration
[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Cache images
[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.gif"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.ico"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Robots and sitemap
[[headers]]
  for = "/robots.txt"
  [headers.values]
    Cache-Control = "public, max-age=3600"

[[headers]]
  for = "/sitemap.xml"
  [headers.values]
    Cache-Control = "public, max-age=3600"

# Function configuration for Puppeteer support
[functions]
  node_bundler = "esbuild"
  external_node_modules = ["puppeteer"]

# Function-specific settings for preview function
[functions.preview]
  timeout = 30 